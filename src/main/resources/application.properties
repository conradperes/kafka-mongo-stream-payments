# The Kafka broker location (defaults to localhost:9092)
#kafka.bootstrap.servers=15.228.158.3:9092

# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=b-1.odin-walking-skeleton1.ltipxr.c3.kafka.sa-east-1.amazonaws.com:9092,b-2.odin-walking-skeleton1.ltipxr.c3.kafka.sa-east-1.amazonaws.com:9092
#quarkus.mongodb.connection-string=mongodb://180.0.232.57:27017/transaction?authSource=admin&authMechanism=SCRAM-SHA-1
quarkus.kubernetes-config.secrets.enabled=true
quarkus.kubernetes-config.secrets=mongodb
quarkus.datasource.jdbc.url=mongodb://odin:711724Cope()$#@docdb-2021-12-14-17-43-53.cmgijnswmbnn.sa-east-1.docdb.amazonaws.com:27017/?ssl=true&ssl_ca_certs=rds-combined-ca-bundle.pem&retryWrites=false
#quarkus.datasource.username=${database-user}
#quarkus.datasource.password=${database-password}
kafka.group.id=odin-transaction-consumer-group
kafka.auto.offset.reset=earliest
quarkus.http.port=8080
%dev.quarkus.http.port=8811
%test.quarkus.http.port=7711
%server.quarkus.http.port=6611
quarkus.smallrye-openapi.path=/swagger
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui.html

# Configuring the incoming channel (reading from Kafka)===>Consumer
mp.messaging.incoming.confirmation-in.connector=smallrye-kafka
mp.messaging.incoming.confirmation-in.topic=confirmation-authorization
#mp.messaging.incoming.confirmation-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.confirmation-in.value.deserializer=org.acme.model.TransactionDeserializer

# Configuring the outgoing channel (writing to Kafka) ==> Producer
mp.messaging.outgoing.preview-out.connector=smallrye-kafka
mp.messaging.outgoing.preview-out.topic=preview-authorization
//mp.messaging.outgoing.preview-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.preview-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#Configuring the outgoing channel (writing to Kafka) ==> Final Producer ==> To produce the final result of transaction
mp.messaging.outgoing.transaction-finished-out.connector=smallrye-kafka
mp.messaging.outgoing.transaction-finished-out.topic=transaction-finished
#mp.messaging.outgoing.transaction-finished-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.transaction-finished-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#Configuring the outgoing channel (writing to Kafka) ==> Final Producer ==> To produce the final result of transaction
mp.messaging.outgoing.transaction-result-out.connector=smallrye-kafka
mp.messaging.outgoing.transaction-result-out.topic=transaction-result
#mp.messaging.outgoing.transaction-finished-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.transaction-result-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer


#Topico de compensacao de transacao
mp.messaging.outgoing.compensation-authorization-out.connector=smallrye-kafka
mp.messaging.outgoing.compensation-authorization-out.topic=compensation-authorization
mp.messaging.outgoing.compensation-authorization-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer


#Topico de validacao de pin da transacao
mp.messaging.outgoing.pin-authorization-out.connector=smallrye-kafka
mp.messaging.outgoing.pin-authorization-out.topic=pin-authorization
mp.messaging.outgoing.pin-authorization-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#Topico de validacao de pin da transacao
mp.messaging.outgoing.confirmation-out.connector=smallrye-kafka
mp.messaging.outgoing.confirmation-out.topic=confirmation-authorization
mp.messaging.outgoing.confirmation-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
