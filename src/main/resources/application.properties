# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=localhost:9092
kafka.group.id=odin-transaction-consumer-group
kafka.auto.offset.reset=earliest
quarkus.http.port=8080
%dev.quarkus.http.port=8811
%test.quarkus.http.port=7711
%server.quarkus.http.port=6611

# Configuring the incoming channel (reading from Kafka)===>Consumer
mp.messaging.incoming.confirmation-in.connector=smallrye-kafka
mp.messaging.incoming.confirmation-in.topic=confirmation-authorization
#mp.messaging.incoming.confirmation-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.confirmation-in.value.deserializer=org.acme.model.TransactionDeserializer

# Configuring the outgoing channel (writing to Kafka) ==> Producer
mp.messaging.outgoing.preview-out.connector=smallrye-kafka
mp.messaging.outgoing.preview-out.topic=preview-authorization
//mp.messaging.outgoing.preview-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.preview-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#Configuring the outgoing channel (writing to Kafka) ==> Final Producer ==> To produce the final result of transaction
mp.messaging.outgoing.transaction-finished-out.connector=smallrye-kafka
mp.messaging.outgoing.transaction-finished-out.topic=transaction-finished
#mp.messaging.outgoing.transaction-finished-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.transaction-finished-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#Configuring the outgoing channel (writing to Kafka) ==> Final Producer ==> To produce the final result of transaction
mp.messaging.outgoing.transaction-result-out.connector=smallrye-kafka
mp.messaging.outgoing.transaction-result-out.topic=transaction-result
#mp.messaging.outgoing.transaction-finished-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.transaction-result-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer


#Topico de compensacao de transacao
mp.messaging.outgoing.compensation-authorization-out.connector=smallrye-kafka
mp.messaging.outgoing.compensation-authorization-out.topic=compensation-authorization
mp.messaging.outgoing.compensation-authorization-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
